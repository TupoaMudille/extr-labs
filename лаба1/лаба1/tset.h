#pragma once
#include "tbitfield.h"

class TSet
{
private:
	int MaxPower;       // максимальная мощность множества
	TBitField BitField; // битовое поле для хранения характеристического вектора

public:
	TSet(int mp);
	TSet(const TSet& s);       // конструктор копирования
	TSet(const TBitField& bf); // конструктор преобразования типа
	operator TBitField();      // преобразование типа к битовому полю
	// доступ к битам

	void print_array();

	int GetMaxPower(void) const;     // максимальная мощность множества
	void InsElem(const int Elem);       // включить элемент в множество
	void DelElem(const int Elem);       // удалить элемент из множества
	int IsMember(int Elem) const; // проверить наличие элемента в множестве
	TSet operator<<(int k); //сдвиг битов влево

	bool operator== (const TSet& s); // сравнение
	// теоретико-множественные операции

	TSet& operator=(const TSet& s);  // присваивание
	
	TSet operator+ (const int Elem); // объединение с элементом

	int operator!= (const TSet& s); // сравнение// элемент должен быть из того же универса
	TSet operator- (const int Elem); // разность с элементом
									 // элемент должен быть из того же универса
	TSet operator+ (const TSet &s);  // объединение
	TSet operator* (const TSet &s);  // пересечение
	TSet operator~ (void);           // дополнение

	friend istream &operator>>(istream &istr, TSet &bf);
	friend ostream &operator<<(ostream &ostr, const TSet &bf);

};